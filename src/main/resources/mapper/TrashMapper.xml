<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.mapper.TrashMapper">
  <resultMap id="BaseResultMap" type="cn.com.entity.Trash">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="trash_type_id" jdbcType="INTEGER" property="trashTypeId" />
    <result column="capacity" jdbcType="VARCHAR" property="capacity" />
    <result column="status" jdbcType="BIGINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, number, trash_type_id, capacity, status, create_date, location, create_by
  </sql>
  <select id="selectByExample" parameterType="cn.com.entity.TrashExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trash
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trash
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.entity.TrashExample">
    delete from trash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.entity.Trash">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trash (number, trash_type_id, capacity, 
      status, create_date, location, 
      create_by)
    values (#{number,jdbcType=VARCHAR}, #{trashTypeId,jdbcType=INTEGER}, #{capacity,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.entity.Trash">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trash
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        number,
      </if>
      <if test="trashTypeId != null">
        trash_type_id,
      </if>
      <if test="capacity != null">
        capacity,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="trashTypeId != null">
        #{trashTypeId,jdbcType=INTEGER},
      </if>
      <if test="capacity != null">
        #{capacity,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.entity.TrashExample" resultType="java.lang.Integer">
    select count(*) from trash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trash
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.trashTypeId != null">
        trash_type_id = #{record.trashTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.capacity != null">
        capacity = #{record.capacity,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trash
    set id = #{record.id,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      trash_type_id = #{record.trashTypeId,jdbcType=INTEGER},
      capacity = #{record.capacity,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.entity.Trash">
    update trash
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="trashTypeId != null">
        trash_type_id = #{trashTypeId,jdbcType=INTEGER},
      </if>
      <if test="capacity != null">
        capacity = #{capacity,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.entity.Trash">
    update trash
    set number = #{number,jdbcType=VARCHAR},
      trash_type_id = #{trashTypeId,jdbcType=INTEGER},
      capacity = #{capacity,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>